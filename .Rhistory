setwd("~/GitHub/RepData_PeerAssessment1")
library(reshape2)
unzip("activity.zip")
act_data<-read.csv("activity.csv")
act_data$date<-as.Date(act_data$date,format="%Y-%m-%d")
melt.data<-melt(act_data,id=c("date","interval"),
measure.vars=c("steps"))
date.step<-dcast(melt.data,date ~ "steps", sum)
png(file="hist_date_steps.png")
with(date.step,hist(steps,
main="The Total Number of Steps Taken Each Day"))
dev.off()
mean.date.step<-mean(date.step$steps,na.rm=TRUE)
med.date.step<-median(date.step$steps,na.rm=TRUE)
print(paste("The mean of the total number of steps taken per day is ",
mean.date.step, ".", sep=""))
print(paste("The median of the total number of steps taken per day is ",
med.date.step, ".", sep=""))
interval.step<-dcast(melt.data, interval ~ "steps", mean,
na.rm=TRUE)
max.interval<-interval.step[interval.step$steps ==
max(interval.step[,2]),1]
png("plot_interval_steps.png")
with(interval.step,plot(interval,steps,type="l",
main="The Average Number of Steps Taken per 5-minute Interval"))
dev.off()
print(paste("The interval of", max.interval,
"contains the max number of steps."))
print(paste("The total number of missing values in the dataset is:",
nrow(subset(act_data,is.na(act_data$steps)))))
fill_data <- merge(act_data, interval.step, by="interval",
suffixes=c("", "_intervalmean"))
fill_data[is.na(fill_data$steps), "steps"] =
fill_data[is.na(fill_data$steps), "steps_intervalmean"]
fill_data$steps_intervalmean <- NULL
##fill_data <- fill_data[,c(2,3,1)]
##fill_data <- fill_data[order(fill_data$date,fill_data$interval),]
##row.names(fill_data) <- NULL
melt.fill.data<-melt(fill_data,id=c("date","interval"),
measure.vars=c("steps"))
date.step.f<-dcast(melt.fill.data,date ~ "steps", sum)
png(file="hist_date_steps_filled.png")
with(date.step.f,hist(steps,
main="The Total Number of Steps Taken Each Day"))
dev.off()
mean.date.step.f<-mean(date.step.f$steps,na.rm=TRUE)
med.date.step.f<-median(date.step.f$steps,na.rm=TRUE)
print(paste("The mean of the total number of steps taken per day is ",
mean.date.step.f, ".", sep=""))
print(paste("The median of the total number of steps taken per day is ",
med.date.step.f, ".", sep=""))
View(fill_data)
week <- c()
a<-c(1:3)
a
a <- a+6
a
a <- a+c
(6)
a
??combine vector
??vector
a<-c(a,5)
a
weekday(fill_data[1,])
weekdays(fill_data[1,])
?weekdat
?weekdays
weekdays(fill_data[1,1])
weekdays(fill_data)
weekdays(fill_data$date)
weekdays(fill_data$date,1)
weekdays(fill_data["date",])
weekdays(fill_data$date,1)
weekdays(fill_data$date[1])
Sys.
?Sys
??Sys
defaults write org.R-project.R force.LANG en_US.UTF-8
?defaults
Sys.setenv
?Sys.setenv
?Sys.getenv
Sys.getenv(LANG)
Sys.getenv("LANG"")
Sys.getenv("LANG")
Sys.getenv("LANG")
Sys.setenv(LANG="en")
weekdays(fill_data$date[1])
Sys.getlocale()
Sys.setlocale("LC_MESSAGES", 'en_GB.UTF-8')
Sys.setlocale("LC_ALL","English")
weekdays(fill_data$date[1])
week <- weekdays(fill_data$date)
week <- as.factor(weekdays(fill_data$date))
??factor
week
week[Monday] <- "weekday"
week["Monday"] <- "weekday"
??factorlevel
week
y<-g1(2,4,8)
y<-gl(2,4,8)
y
levels(y)<-c("low","high")
y
week
levels(week)<-c("weekday","weekday","weekend","weekend","weekday","weekday","weekday")
week
week <- as.factor(weekdays(fill_data$date))
levels(week)
levels(week)["Monday"]
levels(week)["Monday"]<-"weekday"
levels(week)
levels(week)
week
levels(week)["Monday"]
levels(week)[1]
levels(week)[Monday]
levels(week)[c("Monday")]
levels(week)[]
week <- as.factor(weekdays(fill_data$date))
reorder(week)
levels(week)
str(levels(week))
?as.factor
week <- as.factor(weekdays(fill_data$date),levels=c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"))
week <- as.factor(weekdays(fill_data$date),labels=c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"))
week <- as.factor(weekdays(fill_data$date),c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"))
week <- factor(weekdays(fill_data$date),c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"))
week
levels(week)
?levels
lvels(week)[1:5]
levels(week)[1:5]
levels(week)[1:5]<-"weekday"
levels(week)
levels(week)[2:3]<-"weekend"
levels(week)
week
?cbind
fill_data <- cbind(fill_data,week)
View(fill_data)
weedays(fill_data[date,1])
weekdays(fill_data[date,1])
weekdays(fill_data$date[1])
weekdays(fill_data$date[5])
weekdays(fill_data$date[3])
with(fill_data,plot(week,interval))
with(fill_data,plot(week,interval,type="l"))
with(fill_data["weel"=="weekday"],plot(steps,interval,type="l"))
with(fill_data["week"=="weekday"],plot(steps,interval,type="l"))
with(fill_data["week"=="weekday",],plot(steps,interval,type="l"))
fill_data["week"=="weekday",]
?subsety
?subset
subset(fill_data,fill_data$week=="weekday")
with(subset(fill_data,fill_data$week=="weekday"),plot(steps,interval))
with(subset(fill_data,fill_data$week=="weekday"),plot(steps,interval,typ="l"))
with(subset(fill_data,fill_data$week=="weekday"),plot(interval,steps,typ="l"))
Sys.setlocale("LC_ALL","English")
library(reshape2)
unzip("activity.zip")
act_data<-read.csv("activity.csv")
act_data$date<-as.Date(act_data$date,format="%Y-%m-%d")
melt.data<-melt(act_data,id=c("date","interval"),
measure.vars=c("steps"))
date.step<-dcast(melt.data,date ~ "steps", sum)
png(file="hist_date_steps.png")
with(date.step,hist(steps,
main="The Total Number of Steps Taken Each Day"))
dev.off()
mean.date.step<-mean(date.step$steps,na.rm=TRUE)
med.date.step<-median(date.step$steps,na.rm=TRUE)
print(paste("The mean of the total number of steps taken per day is ",
mean.date.step, ".", sep=""))
print(paste("The median of the total number of steps taken per day is ",
med.date.step, ".", sep=""))
interval.step<-dcast(melt.data, interval ~ "steps", mean,
na.rm=TRUE)
max.interval<-interval.step[interval.step$steps ==
max(interval.step[,2]),1]
png("plot_interval_steps.png")
with(interval.step,plot(interval,steps,type="l",
main="The Average Number of Steps Taken per 5-minute Interval"))
dev.off()
print(paste("The interval of", max.interval,
"contains the max number of steps."))
print(paste("The total number of missing values in the dataset is:",
nrow(subset(act_data,is.na(act_data$steps)))))
fill_data <- merge(act_data, interval.step, by="interval",
suffixes=c("", "_intervalmean"))
fill_data[is.na(fill_data$steps), "steps"] =
fill_data[is.na(fill_data$steps), "steps_intervalmean"]
##fill_data <- fill_data[,c(2,3,1)]
##fill_data <- fill_data[order(fill_data$date,fill_data$interval),]
##row.names(fill_data) <- NULL
melt.fill.data<-melt(fill_data,id=c("date","interval"),
measure.vars=c("steps"))
date.step.f<-dcast(melt.fill.data,date ~ "steps", sum)
png(file="hist_date_steps_filled.png")
with(date.step.f,hist(steps,
main="The Total Number of Steps Taken Each Day"))
dev.off()
mean.date.step.f<-mean(date.step.f$steps,na.rm=TRUE)
med.date.step.f<-median(date.step.f$steps,na.rm=TRUE)
print(paste("The mean of the total number of steps taken per day is ",
mean.date.step.f, ".", sep=""))
print(paste("The median of the total number of steps taken per day is ",
med.date.step.f, ".", sep=""))
week <- factor(weekdays(fill_data$date),
c("Monday", "Tuesday", "Wednesday", "Thursday",
"Friday", "Saturday", "Sunday"))
levels(week)[1:5]<-"weekday"
levels(week)[2:3]<-"weekend"
fill_data <- cbind(fill_data,week)
with(subset(fill_data,fill_data$week=="weekday"),plot(interval,steps,typ="l",xlim=c()))
View(fill_data)
with(subset(fill_data,fill_data$week=="weekday"),plot(interval,steps_intervalmean,typ="l",xlim=c()))
??plot
??average
?mea
?mean
Sys.setlocale("LC_ALL","English")
library(reshape2)
unzip("activity.zip")
act_data<-read.csv("activity.csv")
act_data$date<-as.Date(act_data$date,format="%Y-%m-%d")
melt.data<-melt(act_data,id=c("date","interval"),
measure.vars=c("steps"))
date.step<-dcast(melt.data,date ~ "steps", sum)
png(file="hist_date_steps.png")
with(date.step,hist(steps,
main="The Total Number of Steps Taken Each Day"))
dev.off()
mean.date.step<-mean(date.step$steps,na.rm=TRUE)
med.date.step<-median(date.step$steps,na.rm=TRUE)
print(paste("The mean of the total number of steps taken per day is ",
mean.date.step, ".", sep=""))
print(paste("The median of the total number of steps taken per day is ",
med.date.step, ".", sep=""))
interval.step<-dcast(melt.data, interval ~ "steps", mean,
na.rm=TRUE)
max.interval<-interval.step[interval.step$steps ==
max(interval.step[,2]),1]
png("plot_interval_steps.png")
with(interval.step,plot(interval,steps,type="l",
main="The Average Number of Steps Taken per 5-minute Interval"))
dev.off()
print(paste("The interval of", max.interval,
"contains the max number of steps."))
print(paste("The total number of missing values in the dataset is:",
nrow(subset(act_data,is.na(act_data$steps)))))
fill_data <- merge(act_data, interval.step, by="interval",
suffixes=c("", "_intervalmean"))
fill_data[is.na(fill_data$steps), "steps"] =
fill_data[is.na(fill_data$steps), "steps_intervalmean"]
fill_data$steps_intervalmean <- NULL
##fill_data <- fill_data[,c(2,3,1)]
##fill_data <- fill_data[order(fill_data$date,fill_data$interval),]
##row.names(fill_data) <- NULL
week <- factor(weekdays(fill_data$date),
c("Monday", "Tuesday", "Wednesday", "Thursday",
"Friday", "Saturday", "Sunday"))
levels(week)[1:5]<-"weekday"
levels(week)[2:3]<-"weekend"
fill_data <- cbind(fill_data,week)
melt.fill.data<-melt(fill_data,id=c("date","interval","week"),
measure.vars=c("steps"))
date.step.f<-dcast(melt.fill.data,date ~ "steps", sum)
png(file="hist_date_steps_filled.png")
with(date.step.f,hist(steps,
main="The Total Number of Steps Taken Each Day"))
dev.off()
mean.date.step.f<-mean(date.step.f$steps,na.rm=TRUE)
med.date.step.f<-median(date.step.f$steps,na.rm=TRUE)
print(paste("The mean of the total number of steps taken per day is ",
mean.date.step.f, ".", sep=""))
print(paste("The median of the total number of steps taken per day is ",
med.date.step.f, ".", sep=""))
View(fill_data)
date.weekday.f<-dcast(subset(melt.fill.data,melt.fill.data$week=="weekday"),
interval ~ "steps", mean)
View(date.weekday.f)
weekday.interval.f<-dcast(subset(melt.fill.data,melt.fill.data$week=="weekday"),
interval ~ "steps", mean)
View(weekday.interval.f)
with(weekday.interval.f,plot(interval,steps))
with(weekday.interval.f,plot(interval,steps,type="l"))
weekend.interval.f<-dcast(subset(melt.fill.data,melt.fill.data$week=="weekend"),
interval ~ "steps", mean)
with(weekend.interval.f,plot(interval,steps,type="l"))
?mframe
??mframe
??frame
??plotframe
?fr
par(mfrow=c(1,2))
with(weekday.interval.f,plot(interval,steps,type="l"))
par(mfrow=c(2,1))
with(weekday.interval.f,plot(interval,steps,type="l"))
with(weekend.interval.f,plot(interval,steps,type="l"))
?par
?lattice
??latticve
??lattice
