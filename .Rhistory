setwd("~/GitHub/RepData_PeerAssessment1")
library(reshape2)
unzip("activity.zip")
act_data<-read.csv("activity.csv")
act_data$date<-as.Date(act_data$date,format="%Y-%m-%d")
melt.data<-melt(act_data,id=c("date","interval"),
measure.vars=c("steps"))
date.step<-dcast(melt.data,date ~ "steps", sum)
png(file="hist_date_steps.png")
with(date.step,hist(steps,
main="The Total Number of Steps Taken Each Day"))
dev.off()
mean.date.step<-mean(date.step$steps,na.rm=TRUE)
med.date.step<-median(date.step$steps,na.rm=TRUE)
print(paste("The mean of the total number of steps taken per day is ",
mean.date.step, ".", sep=""))
print(paste("The median of the total number of steps taken per day is ",
med.date.step, ".", sep=""))
interval.step<-dcast(melt.data, interval ~ "steps", mean,
na.rm=TRUE)
max.interval<-interval.step[interval.step$steps ==
max(interval.step[,2]),1]
png("plot_interval_steps.png")
with(interval.step,plot(interval,steps,type="l",
main="The Average Number of Steps Taken per 5-minute Interval"))
dev.off()
print(paste("The interval of", max.interval,
"contains the max number of steps."))
print(paste("The total number of missing values in the dataset is:",
nrow(subset(act_data,is.na(act_data$step)))))
fill_data<-act_data
?merge
merge(fill_data,interval.step)
head(merge(fill_data,interval.step))
str(merge(fill_data,interval.step))
summary(merge(fill_data,interval.step))
View(fill_data)
View(fill_data)
summary(merge(fill_data,interval.step,by=interval))
summary(merge(fill_data,interval.step,by="interval"))
view(merge(fill_data,interval.step,by="interval"))
View(merge(fill_data,interval.step,by="interval"))
View(merge(fill_data,interval.step,by="interval",suffixes=c("steps","msteps")))
View(merge(fill_data,interval.step,by="interval",suffixes=c("","_mean")))
View(merge(fill_data,interval.step,by="interval",suffixes=c("","_intervalmean")))
fill_data<-merge(act_data, interval.step, by="interval",
suffixes=c("", "_intervalmean")))
fill_data <- merge(act_data, interval.step, by="interval",
suffixes=c("", "_intervalmean"))
View(fill_data)
fill_data[is.na(fill_data[,]),]
View(fill_data[is.na(fill_data[,]),])
View(fill_data[is.na(fill_data),])
View(fill_data)
is.na(fill_data)
View(is.na(fill_data))
View(fill_data[is.na(fill_data),])
View(act_data)
print(paste("The total number of missing values in the dataset is:",
nrow(subset(act_data,is.na(act_data$steps)))))
print(paste("The total number of missing values in the dataset is:",
nrow(subset(act_data,is.na(act_data$step)))))
View(fill_data[is.na(fill_data$steps),])
is.na(act_data$steps)
is.na(act_data$step)
View(is.na(act_data$step))
is.na(fill_data$step)
is.na(fill_data$steps)
fill_data[is.na(fill_data$steps),]
View(fill_data[is.na(fill_data$steps),])
View(act_data)
fill_data <- merge(act_data, interval.step, by="interval",
suffixes=c("", "_intervalmean"), sort=FALSE)
View(fill_data)
View(fill_data)
?sort
?sort data.frame
?dsort
??sort
??sort data.frame
??sort_data.frame
??sortdata.frame
??sort.data.frame
??sort
?merge
??sorting
sort(fill_data)
sort(fill_data,date)
?sort.df
?sort.data.frame
??sort.data.frame
View(fill_data[order(fill_data#date),])
View(fill_data[order(fill_data$date),])
order<-fill_data[order(fill_data$date),]
View(order)
View(order[,c(2,5)])
View(order[,2,5)])
View(order[,2,5])
View(order[,2])
View(order[,c(2,5)])
View(order[,c(2,4)])
View(order[,c(2,3,4,5)])
View(order[,c(2,3,4)])
?rm.col
?rm.cols
View(fill_data)
str(fill_data)
summary(fill_data)
?merge
fill_data <- merge(act_data, interval.step, by="interval",
suffixes=c("", "_intervalmean"))
fill_data <- merge(act_data, interval.step, by="interval",
suffixes=c("", "_intervalmean",order="date"))
View(fill_data)
fill_data <- merge(act_data, interval.step, by="interval",
suffixes=c("", "_intervalmean"),order="date")
View(fill_data)
View(fill_data)
fill_data <- merge(act_data, interval.step, by="interval",
suffixes=c("", "_intervalmean"),sort=FALSE)
View(fill_data)
fill_data <- merge(act_data, interval.step, by="interval",
suffixes=c("", "_intervalmean"))
View(fill_data)
is.na(fill_data)
is.na(fill_data)
is.na(fill_data$steps)
fill_data[is.na(fill_data$steps),]
fill_data[is.na(fill_data$steps),2]
fill_data[is.na(fill_data$steps),steps]
fill_data[is.na(fill_data$steps),"steps"]
fill_data[is.na(fill_data$steps),"steps"]=fill_data[is.na(fill_data$steps),"steps_intervalmean"]
View(fill_data)
with(date.step,hist(steps,
main="The Total Number of Steps Taken Each Day"))
with(fill_data,hist(steps,main="The Total Number of Steps Taken Each Day"))
?rm.column
??rm.column
??remove
?subset
?subset.colums
?subset.columns
??subset.columns
fill_data$steps_intervalmean <- NULL
View(fill_data)
View(act_data)
?rank
fill_data[order(date,interval),]
fill_data[order(date),]
fill_data[order(fill_data$date),]
fill_data[order(fill_data$date,fill_data$interval),]
head(fill_data[order(fill_data$date,fill_data$interval),])
View(fill_data[order(fill_data$date,fill_data$interval),])
View(fill_data[order(fill_data$date,fill_data$interval),])
fill_data[,c(2,3,1)]
head(fill_data[,c(2,3,1)])
fill_data <- fill_data[,c(2,3,1)]
View(fill_data)
View(fill_data[order(fill_data$date,fill_data$interval),])
fill_data[order(fill_data$date,fill_data$interval),]
fiil_data <- fill_data[order(fill_data$date,fill_data$interval),]
fill_data <- fill_data[order(fill_data$date,fill_data$interval),]
View(fill_data)
fill_data <- merge(act_data, interval.step, by="interval",
suffixes=c("", "_intervalmean"))
fill_data[is.na(fill_data$steps), "steps"] =
fill_data[is.na(fill_data$steps), "steps_intervalmean"]
fill_data$steps_intervalmean <- NULL
fill_data$row.names <- NULL
fill_data <- fill_data[,c(2,3,1)]
fill_data <- fill_data[order(fill_data$date,fill_data$interval),]
View(fiil_data)
View(fill_data)
fill_data <- merge(act_data, interval.step, by="interval",
suffixes=c("", "_intervalmean"))
fill_data[is.na(fill_data$steps), "steps"] =
fill_data[is.na(fill_data$steps), "steps_intervalmean"]
fill_data$steps_intervalmean <- NULL
fill_data <- fill_data[,c(2,3,1)]
fill_data <- fill_data[order(fill_data$date,fill_data$interval),]
fill_data$row.names <- NULL
View(fiil_data)
View(fill_data)
fill_data[,1]<- NULL
View(fill_data)
fill_data <- merge(act_data, interval.step, by="interval",
suffixes=c("", "_intervalmean"))
fill_data[is.na(fill_data$steps), "steps"] =
fill_data[is.na(fill_data$steps), "steps_intervalmean"]
fill_data$steps_intervalmean <- NULL
fill_data <- fill_data[,c(2,3,1)]
fill_data <- fill_data[order(fill_data$date,fill_data$interval),]
View(fill_data)
??row.names
row.names(fill_data)
row.names(fill_data)<-NULL
View(fill_data)
fill_data <- merge(act_data, interval.step, by="interval",
suffixes=c("", "_intervalmean"))
fill_data[is.na(fill_data$steps), "steps"] =
fill_data[is.na(fill_data$steps), "steps_intervalmean"]
fill_data$steps_intervalmean <- NULL
fill_data <- fill_data[,c(2,3,1)]
fill_data <- fill_data[order(fill_data$date,fill_data$interval),]
row.names(fill_data) <- NULL
View(fill_data)
fill_data <- merge(act_data, interval.step, by="interval",
suffixes=c("", "_intervalmean"),row.names=NULL)
fill_data[is.na(fill_data$steps), "steps"] =
fill_data[is.na(fill_data$steps), "steps_intervalmean"]
fill_data$steps_intervalmean <- NULL
fill_data <- fill_data[,c(2,3,1)]
fill_data <- fill_data[order(fill_data$date,fill_data$interval),]
View(fill_data)
fill_data <- merge(act_data, interval.step, by="interval",
suffixes=c("", "_intervalmean"))
fill_data[is.na(fill_data$steps), "steps"] =
fill_data[is.na(fill_data$steps), "steps_intervalmean"]
fill_data$steps_intervalmean <- NULL
fill_data <- fill_data[,c(2,3,1)]
fill_data <- fill_data[order(fill_data$date,fill_data$interval),]
row.names(fill_data) <- NULL
View(fill_data)
melt.fill.data<-melt(fill_data,id=c("date","interval"),
measure.vars=c("steps"))
date.step.f<-dcast(melt.fill.data,date ~ "steps", sum)
with(date.step.f,hist(steps,
main="The Total Number of Steps Taken Each Day"))
source('~/GitHub/RepData_PeerAssessment1/fun.R', echo=TRUE)
med.date.step.f, ".", sep=""))
mean.date.step.f<-mean(date.step.f$steps,na.rm=TRUE)
med.date.step.f<-median(date.step.f$steps,na.rm=TRUE)
print(paste("The mean of the total number of steps taken per day is ",
mean.date.step.f, ".", sep=""))
print(paste("The median of the total number of steps taken per day is ",
med.date.step.f, ".", sep=""))
source('~/GitHub/RepData_PeerAssessment1/fun.R', echo=TRUE)
fun1()
source('~/GitHub/RepData_PeerAssessment1/fun.R', echo=TRUE)
fun1()
source('~/GitHub/RepData_PeerAssessment1/fun.R', echo=TRUE)
fun1()
